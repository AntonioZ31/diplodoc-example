openapi: 3.0.0
info:
  version: 1.0.0
  title: Swagger Petstore Draft
  description: API для управления питомцами в магазине. Позволяет просматривать, добавлять и получать информацию о питомцах.
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
  - url: https://test.petstore.example.com/v1
security:
  - ApiKeyAuth: []

paths:
  /pets:
    get:
      summary: Получить список питомцев
      description: Возвращает список доступных питомцев с возможностью ограничения количества.
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: Максимальное количество питомцев в ответе (по умолчанию все)
          required: false
          schema:
            type: integer
            maximum: 100
            format: int32
      responses:
        '200':
          description: Успешный ответ со списком питомцев
          headers:
            x-next:
              description: URI следующей страницы (если есть)
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: Ошибка при получении списка питомцев
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Добавить нового питомца
      description: Добавляет нового питомца в базу данных.
      operationId: createPets
      tags:
        - pets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '201':
          description: Питомец успешно создан
        default:
          description: Ошибка при создании питомца
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /pets/{petId}:
    get:
      summary: Получить информацию о питомце
      description: Возвращает информацию о питомце по его уникальному идентификатору.
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: Уникальный идентификатор питомца
          schema:
            type: string
      responses:
        '200':
          description: Питомец найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Некорректный идентификатор питомца
        '404':
          description: Питомец не найден
        default:
          description: Неизвестная ошибка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Pet:
      type: object
      description: Объект, представляющий одного питомца
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор питомца
        name:
          type: string
          description: Имя питомца
        tag:
          type: string
          description: Дополнительная метка (например, вид питомца)
    Pets:
      type: array
      description: Список питомцев
      maxItems: 100
      items:
        $ref: '#/components/schemas/Pet'
    Error:
      type: object
      description: Ответ с описанием ошибки
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Код ошибки
        message:
          type: string
          description: Сообщение об ошибке